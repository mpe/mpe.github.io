<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>mpe's tech blog - Michael Ellerman</title><link>https://mpe.github.io/</link><description></description><lastBuildDate>Mon, 23 May 2016 11:30:00 +1000</lastBuildDate><item><title>Kernel Live Patching for ppc64le</title><link>https://mpe.github.io/posts/2016/05/23/kernel-live-patching-for-ppc64le/</link><description>&lt;p&gt;As part of the 4.6 and 4.7 development cycles, several of us from IBM &amp;amp; SUSE
finally got all the pieces lined up to enable kernel live patching for ppc64le.&lt;/p&gt;
&lt;p&gt;If you're not familiar with kernel live patching, there's a pretty good write-up
at &lt;a href="https://en.wikipedia.org/wiki/KGraft"&gt;Wikipedia&lt;/a&gt;. But the basic idea …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Ellerman</dc:creator><pubDate>Mon, 23 May 2016 11:30:00 +1000</pubDate><guid isPermaLink="false">tag:mpe.github.io,2016-05-23:/posts/2016/05/23/kernel-live-patching-for-ppc64le/</guid><category>kernel</category></item><item><title>FAT32 Filesystem Archaeology</title><link>https://mpe.github.io/posts/2012/02/17/fat32-filesystem-archaeology/</link><description>&lt;p&gt;A while back I bought Dad an iRiver E150 so he could make audio recordings of my
grandparents. It's quite a nice little device and had been doing a fairly good
job for a few months, but then all of a sudden some of the recordings wouldn't
play.&lt;/p&gt;
&lt;p&gt;To cut …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Ellerman</dc:creator><pubDate>Fri, 17 Feb 2012 07:30:00 +1100</pubDate><guid isPermaLink="false">tag:mpe.github.io,2012-02-17:/posts/2012/02/17/fat32-filesystem-archaeology/</guid></item><item><title>Canberra and the world's fastest computer</title><link>https://mpe.github.io/posts/2008/06/19/canberra-and-the-worlds-fastest-computer/</link><description>&lt;p&gt;As &lt;a href="http://ozlabs.org/~jk/diary/tech/cell/qs22.diary/"&gt;Jeremy mentioned&lt;/a&gt;, the &lt;a href="https://en.wikipedia.org/wiki/IBM_BladeCenter#QS22"&gt;IBM QS22&lt;/a&gt; was released a few weeks ago. The
QS22 is the newest &lt;a href="http://en.wikipedia.org/wiki/Cell_microprocessor"&gt;Cell processor&lt;/a&gt; based blade server, sporting the new
&lt;a href="http://en.wikipedia.org/wiki/Cell_microprocessor#PowerXCell_8i"&gt;PowerXCell 8i&lt;/a&gt; chip, and up to 32 GB of memory.&lt;/p&gt;
&lt;p&gt;&lt;img alt="IBM QS22" class="center" src="/images/2008/qs22.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Because the QS22 can support larger amounts of memory, Linux needs to enable the
&lt;a href="http://en.wikipedia.org/wiki/Iommu"&gt;IOMMU …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Ellerman</dc:creator><pubDate>Thu, 19 Jun 2008 11:30:00 +1000</pubDate><guid isPermaLink="false">tag:mpe.github.io,2008-06-19:/posts/2008/06/19/canberra-and-the-worlds-fastest-computer/</guid></item><item><title>LCA 08</title><link>https://mpe.github.io/posts/2008/02/11/lca-08/</link><description>&lt;p&gt;&lt;img alt="Logo" src="/images/2008/lca-08.png" style="float: right"&gt;&lt;/p&gt;
&lt;p&gt;Phew. If you haven't seen or heard from me in the past few weeks, it's cause I
was flat out preparing for &lt;a href="http://linux.conf.au"&gt;linux.conf.au&lt;/a&gt;, aka LCA.&lt;/p&gt;
&lt;p&gt;I foolishly chose a talk topic which is entirely open-ended, it can never be
finished, leading to me spending endless days and nights …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Ellerman</dc:creator><pubDate>Mon, 11 Feb 2008 00:01:00 +1100</pubDate><guid isPermaLink="false">tag:mpe.github.io,2008-02-11:/posts/2008/02/11/lca-08/</guid><category>raytracing</category></item><item><title>Realtime Raytracing on the Cell</title><link>https://mpe.github.io/posts/2007/10/29/realtime-raytracing-on-the-cell/</link><description>&lt;p&gt;In a comment to one of my previous posts, "TimC" asks if the performance of my
simple raytracer is "anywhere near realtime".&lt;/p&gt;
&lt;p&gt;At the moment it's certainly not, although there is definitely the potential for it.&lt;/p&gt;
&lt;p&gt;I haven't spent much effort on optimising the ray tracing algorithm, because I'm
more …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Ellerman</dc:creator><pubDate>Mon, 29 Oct 2007 12:00:00 +1100</pubDate><guid isPermaLink="false">tag:mpe.github.io,2007-10-29:/posts/2007/10/29/realtime-raytracing-on-the-cell/</guid><category>raytracing</category></item><item><title>Raytracing progress report</title><link>https://mpe.github.io/posts/2007/09/18/raytracing-progress-report/</link><description>&lt;p&gt;Getting somewhere ..&lt;/p&gt;
&lt;p&gt;&lt;img alt="Progress ..." class="center" src="/images/2007/ps3-raytracer.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Running live on the PS3, rendering straight to the frame buffer.&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Ellerman</dc:creator><pubDate>Tue, 18 Sep 2007 18:39:07 +1000</pubDate><guid isPermaLink="false">tag:mpe.github.io,2007-09-18:/posts/2007/09/18/raytracing-progress-report/</guid><category>raytracing</category></item><item><title>Raytracing</title><link>https://mpe.github.io/posts/2007/07/20/raytracing/</link><description>&lt;p&gt;With next year's &lt;a href="http://linux.conf.au"&gt;Linux conference&lt;/a&gt; fast approaching I realised that I didn't
really have anything to do a talk about. I've done plenty of work in the last
year, but it's all been pretty dull kernel internals, nothing with any wow
factor. Mostly just a zzzz factor.&lt;/p&gt;
&lt;p&gt;Ever since I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Ellerman</dc:creator><pubDate>Fri, 20 Jul 2007 17:00:00 +1000</pubDate><guid isPermaLink="false">tag:mpe.github.io,2007-07-20:/posts/2007/07/20/raytracing/</guid><category>raytracing</category></item><item><title>Kernel Monkey</title><link>https://mpe.github.io/posts/2005/02/19/kernel-monkey/</link><description>&lt;p&gt;I spent most of last week chasing a bug in the as yet unreleased &lt;code&gt;2.6.11&lt;/code&gt;
kernel. I hit it originally while testing some code I've been writing to
implement a &lt;code&gt;mem=X&lt;/code&gt; boot-time option. After 2-3 hours of running LTP the box
would drop into xmon.&lt;/p&gt;
&lt;p&gt;Just for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Ellerman</dc:creator><pubDate>Sat, 19 Feb 2005 23:00:00 +1100</pubDate><guid isPermaLink="false">tag:mpe.github.io,2005-02-19:/posts/2005/02/19/kernel-monkey/</guid></item></channel></rss>